function csvjson(){}csvjson.EXP_ROW_SEPARATOR=/\r\n|\r|\n/g,csvjson.ERR_COUNTER="ERR_COUNTER",csvjson.ERR_EMPTY_HEADER="ERR_EMPTY_HEADER",csvjson.ERR_EMPTY_HEADER_CELLS="ERR_EMPTY_HEADER_CELLS",csvjson.ERR_EMPTY_ROWS="ERR_EMPTY_ROWS",csvjson.WARN_EMPTY_ROW_AT_THE_END="WARN_EMPTY_ROW_AT_THE_END",csvjson.WARN_DUPLICATED_COLUMN_NAME="WARN_DUPLICATED_COLUMN_NAME",csvjson.ERR_COL_NUMBER_MISMATCH="ERR_COL_NUMBER_MISMATCH",String.prototype.regexIndexOf=function(regex,startpos){var indexOf=this.substring(startpos||0).search(regex);return indexOf>=0?indexOf+(startpos||0):indexOf},String.prototype.countChars=function(char,startIndex,stopIndex){var count=0;"undefined"==typeof startIndex&&(startIndex=0),"undefined"==typeof stopIndex&&(stopIndex=this.length);for(var i=startIndex;stopIndex>i;i++){var c=this.charAt(i);c===char&&count++}return count},csvjson.Split=function(line,COL_SEPARATOR){var VAL_SEPARATOR='"';if(null==COL_SEPARATOR||"undefined"==typeof COL_SEPARATOR)throw"CSV Column separator is null.";for(var STATE={INIT:{id:0},READVAL:{id:1}},cells=[],value="",status=STATE.READVAL,counterValSeparators=0,i=0;i<line.length;i++){var c=line[i];switch(c){case VAL_SEPARATOR:counterValSeparators++,value+=c;break;case COL_SEPARATOR:counterValSeparators%2!=0?value+=c:(cells.push(value),counterValSeparators=0,value="");break;default:status=STATE.READVAL,value+=c}}return value.trim().length>0&&cells.push(value),cells},csvjson.CannotInferSeparatorException=function(message){this.message=message,"captureStackTrace"in Error?Error.captureStackTrace(this,csvjson.CannotInferSeparatorException):this.stack=(new Error).stack},csvjson.CannotInferSeparatorException.prototype=Object.create(Error.prototype),csvjson.CannotInferSeparatorException.prototype.name="CannotInferSeparatorException",csvjson.CannotInferSeparatorException.prototype.constructor=csvjson.CannotInferSeparatorException,csvjson.RecogniseCSVSeparator=function(rows){var tryToSplit=function(rows,colsep){for(var numCols=-1,i=0;i<rows.length&&20>i;i++){var _row=rows[i].trim();if(0!=_row.length){var cells=csvjson.Split(_row,colsep),rowNumCols=cells.length;if(_row.trim().lastIndexOf(colsep)===_row.length-1&&rowNumCols++,-1==numCols&&rowNumCols>1)numCols=rowNumCols;else if(numCols!=rowNumCols)return!1}}return!0},SEPARATOR=";",foundSeparator=tryToSplit(rows,SEPARATOR);if(foundSeparator)return SEPARATOR;if(SEPARATOR=",",foundSeparator=tryToSplit(rows,SEPARATOR))return SEPARATOR;if(rows[0].indexOf(";")<0&&rows[0].indexOf(",")<0)throw new csvjson.CannotInferSeparatorException("The file does not have any separator (; or ,).");throw new csvjson.CannotInferSeparatorException("Rows do not have the same number of columns.")},csvjson.SplitRows=function(text){var prevNewLine=0,lastNewLine=-1,rows=[],line="";for(lastNewLine=text.regexIndexOf(csvjson.EXP_ROW_SEPARATOR,prevNewLine),0>lastNewLine&&rows.push(text);lastNewLine<=text.length&&lastNewLine>=prevNewLine;){line+=text.substr(prevNewLine,lastNewLine-prevNewLine);var numQuotes=line.countChars('"');numQuotes%2==0?(rows.push(line),line="",lastNewLine+="\r"==text.charAt(lastNewLine)&&"\n"==text.charAt(lastNewLine+1)?2:1,prevNewLine=lastNewLine):(prevNewLine=lastNewLine,lastNewLine+="\r"==text.charAt(lastNewLine)&&"\n"==text.charAt(lastNewLine+1)?2:1),lastNewLine=text.regexIndexOf(csvjson.EXP_ROW_SEPARATOR,lastNewLine),0>lastNewLine&&(lastNewLine=text.length),prevNewLine==lastNewLine&&(lastNewLine+="\r"==text.charAt(lastNewLine)&&"\n"==text.charAt(lastNewLine+1)?2:1)}return rows},csvjson.prototype=function(){var _hashCode=function(){var i,chr,hash=0;if(0===this.length)return hash;for(i=0;i<this.length;i++)chr=this.charCodeAt(i),hash=(hash<<5)-hash+chr,hash|=0;return hash},_processHeader=function(header,colseparator){if(null==colseparator||"undefined"==typeof colseparator)throw"Cannot process the CSV header because the column separator is null";var headerNames=header.split(colseparator),fields=[];return headerNames.forEach(function(item,index){var name=item.replace(/\s/,"_"),field={name:name,label:item,index:index};0==field.name.trim().length&&(field.name=name="empty_"+_hashCode()),fields.push(field),fields[name]=field}),fields};return{constructor:csvjson,read:function(csvContent,rowSeparator){var records=[],fields=null,startIndex=0,errors=[];errors[csvjson.ERR_COUNTER]=0,errors[csvjson.ERR_EMPTY_HEADER]=0,errors[csvjson.ERR_EMPTY_ROWS]=0,errors[csvjson.ERR_EMPTY_HEADER_CELLS]=0;var warnings=[];warnings[csvjson.WARN_EMPTY_ROW_AT_THE_END]=0,warnings[csvjson.WARN_DUPLICATED_COLUMN_NAME]=0;var listOfErrors=[],listOfWarnings=[];"undefined"==typeof rowSeparator&&(rowSeparator=csvjson.EXP_ROW_SEPARATOR);var rows=[];try{rows=csvjson.SplitRows(csvContent)}catch(e){console.log(e),rows=csvContent.split(rowSeparator)}var separator=void 0;try{separator=csvjson.RecogniseCSVSeparator(rows)}catch(err){errors[csvjson.ERR_COUNTER]++,errors[csvjson.ERR_COL_NUMBER_MISMATCH]++,listOfErrors.push({type:"error",code:csvjson.ERR_COL_NUMBER_MISMATCH,description:err.message})}if("undefined"!=typeof separator){for(;0==rows[startIndex].trim().length;)errors[csvjson.ERR_COUNTER]++,errors[csvjson.ERR_EMPTY_HEADER]++,listOfErrors.push({type:"error",code:csvjson.ERR_EMPTY_HEADER,description:"The csv has an empty header. Check whether the first row is empty."}),startIndex++;if(fields=_processHeader(rows[startIndex],separator),fields.length>0&&0==fields[fields.length-1].label.trim().length){for(var bEmptyCol=!0,i=startIndex+1;i<rows.length&&bEmptyCol;i++){var row=rows[i];const iLIOSeparator=row.lastIndexOf(separator);if(!(0>iLIOSeparator)&&iLIOSeparator!=row.length-1){var lastCellValue=row.substr(iLIOSeparator+1).trim();lastCellValue.length>0&&(bEmptyCol=!1)}}if(bEmptyCol){const _tFieldIndex=fields.length-1,_tFieldName=fields[_tFieldIndex].name;delete fields[_tFieldName],fields.splice(fields.length-1,1)}}for(var _duplicateCaptions={},i=0;i<fields.length;i++){var _field=fields[i];0==_field.label.trim().length?(errors[csvjson.ERR_EMPTY_HEADER_CELLS]++,1==errors[csvjson.ERR_EMPTY_HEADER_CELLS]&&listOfErrors.push({type:"error",code:csvjson.ERR_EMPTY_HEADER_CELLS,description:"The header has a column with an empty caption."})):_duplicateCaptions.hasOwnProperty(_field.name.trim())?(warnings[csvjson.WARN_DUPLICATED_COLUMN_NAME]++,listOfWarnings.push({type:"warning",code:csvjson.WARN_DUPLICATED_COLUMN_NAME,description:"Duplicated column caption "+_field.name.trim()})):_duplicateCaptions[_field.label.trim()]=1}for(var i=startIndex+1;i<rows.length;i++){var row=rows[i];0==row.trim().length&&(errors[csvjson.ERR_COUNTER]++,i==rows.length-1?warnings[csvjson.WARN_EMPTY_ROW_AT_THE_END]++:(errors[csvjson.ERR_EMPTY_ROWS]++,listOfErrors.push({type:"error",code:csvjson.ERR_EMPTY_ROWS,description:"The csv has an empty row. Check row number "+(i+1)+"."})));for(var values=csvjson.Split(row,separator),jsonRow={},j=0;j<values.length;j++){var value=values[j];"undefined"==typeof fields[j];var key=fields[j].name;jsonRow[key]=value}records.push(jsonRow)}}return{fields:fields,records:records,errors:listOfErrors,warnings:listOfWarnings,_errors:errors,_warnings:warnings}}}}();