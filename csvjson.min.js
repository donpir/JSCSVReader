function csvjson(){}csvjson.EXP_ROW_SEPARATOR=/\r\n|\r|\n/g,csvjson.ERR_COUNTER="ERR_COUNTER",csvjson.ERR_EMPTY_HEADER="ERR_EMPTY_HEADER",csvjson.ERR_EMPTY_HEADER_CELLS="ERR_EMPTY_HEADER_CELLS",csvjson.ERR_EMPTY_ROWS="ERR_EMPTY_ROWS",csvjson.WARN_EMPTY_ROW_AT_THE_END="WARN_EMPTY_ROW_AT_THE_END",csvjson.ERR_COL_NUMBER_MISMATCH="ERR_COL_NUMBER_MISMATCH",csvjson.Split=function(line,COL_SEPARATOR){var VAL_SEPARATOR='"';if(null==COL_SEPARATOR||"undefined"==typeof COL_SEPARATOR)throw"CSV Column separator is null.";for(var STATE={INIT:{id:0},READVAL:{id:1}},cells=[],value="",status=STATE.READVAL,counterValSeparators=0,i=0;i<line.length;i++){var c=line[i];switch(c){case VAL_SEPARATOR:counterValSeparators++,value+=c;break;case COL_SEPARATOR:counterValSeparators%2!=0?value+=c:(cells.push(value),counterValSeparators=0,value="");break;default:status=STATE.READVAL,value+=c}}return value.trim().length>0&&cells.push(value),cells},csvjson.RecogniseCSVSeparator=function(rows){var tryToSplit=function(rows,colsep){for(var numCols=-1,i=0;i<rows.length&&20>i;i++){var _row=rows[i].trim();if(0!=_row.length){var cells=csvjson.Split(_row,colsep),rowNumCols=cells.length;if(_row.trim().lastIndexOf(colsep)===_row.length-1&&rowNumCols++,-1==numCols&&rowNumCols>1)numCols=rowNumCols;else if(numCols!=rowNumCols)return!1}}return!0},SEPARATOR=";",foundSeparator=tryToSplit(rows,SEPARATOR);if(foundSeparator)return SEPARATOR;if(SEPARATOR=",",foundSeparator=tryToSplit(rows,SEPARATOR))return SEPARATOR;throw"Cannot infer the CSV column separator."},csvjson.prototype=function(){var _processHeader=function(header,colseparator){if(null==colseparator||"undefined"==typeof colseparator)throw"Cannot process the CSV header because the column separator is null";var headerNames=header.split(colseparator),fields=[];return headerNames.forEach(function(item,index){var name=item.replace(/\s/,"_"),field={name:name,label:item,index:index};fields.push(field),fields[name]=field}),fields};return{constructor:csvjson,read:function(csvContent,rowSeparator){var records=[],fields=null,startIndex=0,errors=[];errors[csvjson.ERR_COUNTER]=0,errors[csvjson.ERR_EMPTY_HEADER]=0,errors[csvjson.ERR_EMPTY_ROWS]=0,errors[csvjson.ERR_EMPTY_HEADER_CELLS]=0;var warnings=[];warnings[csvjson.WARN_EMPTY_ROW_AT_THE_END]=0;var listOfMessages=[];"undefined"==typeof rowSeparator&&(rowSeparator=csvjson.EXP_ROW_SEPARATOR);var rows=csvContent.split(rowSeparator),separator=void 0;try{separator=csvjson.RecogniseCSVSeparator(rows)}catch(err){errors[csvjson.ERR_COUNTER]++,errors[csvjson.ERR_COL_NUMBER_MISMATCH]++,listOfMessages.push({type:"error",code:csvjson.ERR_COL_NUMBER_MISMATCH,description:"Rows do not have the same number of columns or the separator is not a semicolon or comma."})}if("undefined"!=typeof separator){for(;0==rows[startIndex].trim().length;)errors[csvjson.ERR_COUNTER]++,errors[csvjson.ERR_EMPTY_HEADER]++,listOfMessages.push({type:"error",code:csvjson.ERR_EMPTY_HEADER,description:"The csv has an empty header. Check whether the first row is empty."}),startIndex++;fields=_processHeader(rows[startIndex],separator);for(var i=0;i<fields.length;i++){var _field=fields[i];0==_field.name.trim().length&&(errors[csvjson.ERR_EMPTY_HEADER_CELLS]++,1==errors[csvjson.ERR_EMPTY_HEADER_CELLS]&&listOfMessages.push({type:"error",code:csvjson.ERR_EMPTY_HEADER_CELLS,description:"The header has a column with an empty caption."}))}for(var i=startIndex+1;i<rows.length;i++){var row=rows[i];0==row.trim().length&&(errors[csvjson.ERR_COUNTER]++,i==rows.length-1?warnings[csvjson.WARN_EMPTY_ROW_AT_THE_END]++:(errors[csvjson.ERR_EMPTY_ROWS]++,listOfMessages.push({type:"error",code:csvjson.ERR_EMPTY_ROWS,description:"The csv has an empty row. Check row number "+(i+1)+"."})));for(var values=csvjson.Split(row,separator),jsonRow={},j=0;j<values.length;j++){var value=values[j];"undefined"==typeof fields[j];var key=fields[j].name;jsonRow[key]=value}records.push(jsonRow)}}return{fields:fields,records:records,errors:listOfMessages,_errors:errors,_warnings:warnings}}}}();